name: Commit Stage
on: [push]
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: afidalgo0811/polar-edge-service
  VERSION: latest
  JAVA_VERSION: '17'
  SPACE_USERNAME: ${{ secrets.SPACE_USERNAME }}
  SPACE_PASS: ${{ secrets.SPACE_PASSWORD }}
jobs:
  build:
    name: Build
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}
          cache: gradle
      - name: Build with gradle
        env: # Or as an environment variable
          SPACE_USERNAME: ${{ secrets.SPACE_USERNAME }}
          SPACE_PASSWORD: ${{ secrets.SPACE_PASSWORD }}
        run: |
          chmod +x gradlew
          ./gradlew build -x test
  test:
    name: Test
    runs-on: ubuntu-22.04
    needs: build
    permissions:
      contents: read
      security-events: write
      actions: read
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}
          cache: gradle
      - name: Code vulnerability scanning
        uses: anchore/scan-action@v3
        id: scan
        with:
          path: '${{ github.workspace}}'
          fail-build: false
          severity-cutoff: high
          acs-report-enable: true
      - name: Upload vulnerability report
        uses: github/codeql-action/upload-sarif@v2
        if: success() || failure()
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}
      - name: Build, Unit test and Integration test
        env: # Or as an environment variable
          SPACE_USERNAME: ${{ secrets.SPACE_USERNAME }}
          SPACE_PASSWORD: ${{ secrets.SPACE_PASSWORD }}
        run: |
          chmod +x gradlew
          ./gradlew build
  kubeval:
    name: Kubernetes Manifests Validation
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
      - name: Validate Kubernetes manifests
        uses: stefanprodan/kube-tools@v1
        with:
          kubectl: 1.24.3
          kubeval: 0.16.1
          command: |
            kubeval --strict -d k8s

  package:
    name: Package and Publish
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: [build, test, kubeval]
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
      security-events: write
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}
          cache: gradle
      - name: Build container image
        env: # Or as an environment variable
          SPACE_USERNAME: ${{ secrets.SPACE_USERNAME }}
          SPACE_PASSWORD: ${{ secrets.SPACE_PASSWORD }}
        run: |
          chmod +x gradlew
          ./gradlew bootBuildImage \
          --imageName ${{env.REGISTRY}}/${{env.IMAGE_NAME}}:${{env.VERSION}}
      - name: OCI image vulnerability scanning
        uses: anchore/scan-action@v3
        id: scan
        with:
          image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
          fail-build: false
          severity-cutoff: high
          acs-report-enable: true
      - name: Upload vulnerability report
        uses: github/codeql-action/upload-sarif@v2
        if: success() || failure()
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}
      - name: Log into container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish container image
        run: docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}